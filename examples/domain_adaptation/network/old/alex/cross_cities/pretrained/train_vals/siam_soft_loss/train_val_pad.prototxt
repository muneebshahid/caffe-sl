name: "AlexNet2Siamese"
# -----------------------------------------------------------------------------
# ------------------------------------------------------------------ Data Layer
# -----------------------------------------------------------------------------

layer {
  name: "source_target_1"
  type: "Data"
  top: "source_target_1"
  top: "im_labels"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "../data/models/alexnet/pretrained/places205CNN_mean.binaryproto"
  }
  data_param {  
    source: "data/domain_adaptation_data/lmdb/train1"
    batch_size: 320 
    backend: LMDB
  }
}

layer {
  name: "source_target_2"
  type: "Data"
  top: "source_target_2"
  top: "domain_labels"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "../data/models/alexnet/pretrained/places205CNN_mean.binaryproto"
  }
  data_param {  
    source: "data/domain_adaptation_data/lmdb/train2"
    batch_size: 320
    backend: LMDB
  }
}

layer {
  name: "source_target_1"
  type: "Data"
  top: "source_target_1"
  top: "source_labels_im"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "../data/models/alexnet/pretrained/places205CNN_mean.binaryproto"
  }
  data_param {
    source: "data/domain_adaptation_data/lmdb/test1"
    batch_size: 320
    backend: LMDB
  }
}

layer {
  name: "source_target_2"
  type: "Data"
  top: "source_target_2"
  top: "domain_labels"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "../data/models/alexnet/pretrained/places205CNN_mean.binaryproto"
  }

  data_param {
    source: "data/domain_adaptation_data/lmdb/test2"
    batch_size: 320
    backend: LMDB
  }
}

# ----------------------------------------------------------------------- Net 1
# -----------------------------------------------------------------------------
# --------------------------------------------------------- Convolutioal Layers
# -----------------------------------------------------------------------------

# ---------------------------------------------------------------------- Conv 1
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "source_target_1"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# ---------------------------------------------------------------------- Conv 2

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# ---------------------------------------------------------------------- Conv 3
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

# ---------------------------------------------------------------------- Conv 4
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "conv_drop4"
  type: "Dropout"
  bottom: "conv4"
  top: "conv4"
  dropout_param {
    dropout_ratio: 0.4
  }
}
# ---------------------------------------------------------------------- Conv 5
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    name: "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

layer {
  name: "conv_drop5"
  type: "Dropout"
  bottom: "conv5"
  top: "conv5"
  dropout_param {
    dropout_ratio: 0.4
  }
}

layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

# -----------------------------------------------------------------------------
# -------------------------------------------------------- Inner Product Layers
# -----------------------------------------------------------------------------

# ------------------------------------------------------------------------ fc 6

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ------------------------------------------------------------------------ fc 7
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# --------------------------------------------------------------------- bottleneck
layer {
  name: "bottleneck_1"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bottleneck_1"
  param {
    name: "bottleneck_w"
    lr_mult: 10
    decay_mult: 1
  }
  param {
    name: "bottleneck_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
	type: "xavier"
      #type: "gaussian"
      #std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

# ----------------------------------------------------------------------- Net 2
# -----------------------------------------------------------------------------
# --------------------------------------------------------- Convolutioal Layers
# -----------------------------------------------------------------------------

# ---------------------------------------------------------------------- Conv 1
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "source_target_2"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "conv1_p"
  top: "conv1_p"
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_p"
  type: "LRN"
  bottom: "pool1_p"
  top: "norm1_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}


# ---------------------------------------------------------------------- Conv 2
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "norm1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_p"
  type: "ReLU"
  bottom: "conv2_p"
  top: "conv2_p"
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_p"
  type: "LRN"
  bottom: "pool2_p"
  top: "norm2_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# ---------------------------------------------------------------------- Conv 3
layer {
  name: "conv3_p"
  type: "Convolution"
  bottom: "norm2_p"
  top: "conv3_p"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_p"
  type: "ReLU"
  bottom: "conv3_p"
  top: "conv3_p"
}

# ---------------------------------------------------------------------- Conv 4
layer {
  name: "conv4_p"
  type: "Convolution"
  bottom: "conv3_p"
  top: "conv4_p"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_p"
  type: "ReLU"
  bottom: "conv4_p"
  top: "conv4_p"
}

layer {
  name: "conv_drop4_p"
  type: "Dropout"
  bottom: "conv4_p"
  top: "conv4_p"
  dropout_param {
    dropout_ratio: 0.4
  }
}

# ---------------------------------------------------------------------- Conv 5
layer {
  name: "conv5_p"
  type: "Convolution"
  bottom: "conv4_p"
  top: "conv5_p"
  param {
    name: "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_p"
  type: "ReLU"
  bottom: "conv5_p"
  top: "conv5_p"
}

layer {
  name: "conv_drop5_p"
  type: "Dropout"
  bottom: "conv5_p"
  top: "conv5_p"
  dropout_param {
    dropout_ratio: 0.4
  }
}

layer {
  name: "pool5_p"
  type: "Pooling"
  bottom: "conv5_p"
  top: "pool5_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

# -----------------------------------------------------------------------------
# -------------------------------------------------------- Inner Product Layers
# -----------------------------------------------------------------------------

# ------------------------------------------------------------------------ fc 6

layer {
  name: "fc6_p"
  type: "InnerProduct"
  bottom: "pool5_p"
  top: "fc6_p"
  param {
    name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_p"
  type: "ReLU"
  bottom: "fc6_p"
  top: "fc6_p"
}
layer {
  name: "drop6_p"
  type: "Dropout"
  bottom: "fc6_p"
  top: "fc6_p"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ------------------------------------------------------------------------ fc 7
layer {
  name: "fc7_p"
  type: "InnerProduct"
  bottom: "fc6_p"
  top: "fc7_p"
  param {
    name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_p"
  type: "ReLU"
  bottom: "fc7_p"
  top: "fc7_p"
}
layer {
  name: "drop7_p"
  type: "Dropout"
  bottom: "fc7_p"
  top: "fc7_p"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# --------------------------------------------------------------------- bottleneck
layer {
  name: "bottleneck_2"
  type: "InnerProduct"
  bottom: "fc7_p"
  top: "bottleneck_2"
  param {
    name: "bottleneck_w"
    lr_mult: 10
    decay_mult: 1
  }
  param {
    name: "bottleneck_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
	type: "xavier"
      #type: "gaussian"
      #std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}



# -----------------------------------------------------------------------------
# ------------------------------------------------------------- Label Predictor
# -----------------------------------------------------------------------------

# -------------------------------------- Split Source Target Features And Labels

layer {
  name: "source_labels_im"
  type: "Slice"
  bottom: "im_labels"
  top: "source_labels_im"
  top: "target_label_im"
  include: { 
    phase: TRAIN 
  }
  slice_param {
    slice_dim: 0
  }  
}

layer {
  name: "source_features_1"
  type: "Slice"
  bottom: "bottleneck_1"
  top: "source_features_1"
  top: "target_features_1"
  include: { 
    phase: TRAIN 
  }
  slice_param {
    slice_dim: 0
  }  
}

layer {
  name: "source_features_2"
  type: "Slice"
  bottom: "bottleneck_2"
  top: "source_features_2"
  top: "target_features_2"
  include: { 
    phase: TRAIN 
  }
  slice_param {
    slice_dim: 0
  }  
}

# ---------------------------------------------------------------------- Silencer
layer {
  name: "silence_target_features"
  type: "Silence"
  bottom: "target_features_1"
  bottom: "target_features_2"
  bottom: "target_label_im"
  include: { 
    phase: TRAIN 
  }
}

# --------------------------------------------------------------------- Copy Data
layer {
  name: "source_features_1"
  type: "Split"
  bottom: "bottleneck_1"
  top: "source_features_1"
  include: { 
    phase: TEST 
  }
}

layer {
  name: "source_features_2"
  type: "Split"
  bottom: "bottleneck_2"
  top: "source_features_2"
  include: { 
    phase: TEST 
  }
}


# ------------------------------------------------------------------------ fc 8

layer {
  name: "fc8_n"
  type: "InnerProduct"
  bottom: "source_features_1"
  top: "fc8_n"
  param {
    name: "fc8_n_w"
    lr_mult: 10
    decay_mult: 1
  }
  param {
    name: "fc8_n_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "fc8_n_p"
  type: "InnerProduct"
  bottom: "source_features_2"
  top: "fc8_n_p"
  param {
    name: "fc8_n_w"
    lr_mult: 10
    decay_mult: 1
  }
  param {
    name: "fc8_n_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



# ------------------------------------------------------------------------ fcc 8

layer 
{
  name: "concat_branches"
  type: "Concat"
  bottom: "fc8_n"
  bottom: "fc8_n_p"
  top: "concat_branches"
  concat_param {
    concat_dim: 1 
  }
}

layer {
  name: "fcc8_n"
  type: "InnerProduct"
  bottom: "concat_branches"
  top: "fcc8_n"
  param {
    name: "fcc8_n_w"
    lr_mult: 10
    decay_mult: 1
  }
  param {
    name: "fcc8_n_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

# ------------------------------------------------------------------- Softmax Pred
layer {
  name: "pred_accuracy"
  type: "Accuracy"
  bottom: "fcc8_n"
  bottom: "source_labels_im"
  top: "pred_accuracy"
  #include: { 
  #phase: TEST 
  #}
}

# ------------------------------------------------------------------- Softmax Loss
layer {
  name: "pred_loss"
  type: "SoftmaxWithLoss"
  bottom: "fcc8_n"
  bottom: "source_labels_im"
  top: "pred_loss"
}

# ------------------------------------------------------------------- Siamese Loss
layer {
  name: "siamese_loss"
  type: "ContrastiveLoss"
  bottom: "fc8_n"
  bottom: "fc8_n_p"
  bottom: "source_labels_im"
  top: "siamese_loss"
  contrastive_loss_param {
    margin: 1
  }
}


# -----------------------------------------------------------------------------
# ----------------------------------------------------------- Gradient reversal
# -----------------------------------------------------------------------------

## ----------------------------------------------------------------- Concat Data

layer 
{
  name: "concat_data"
  type: "Concat"
  bottom: "bottleneck_1"
  bottom: "bottleneck_2"
  top: "concat_data"
  concat_param {
    concat_dim: 1 
  }
}

## ------------------------------------------------------------------------- GRL

layer {
  name: "grl"
  type: "InnerProduct"
  bottom: "concat_data"
  top: "grl"
  param {    
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

#layer {
#  name: "grl"
#  type: "GradientScaler"
#  bottom: "concat_data"
#  top: "grl"
#  gradient_scaler_param {
#    lower_bound: 0.0
#    upper_bound: 1.0
#    alpha: 10.0
#    max_iter: 10000
#  }
#}

# -----------------------------------------------------------------------------
# ----------------------------------------------------------- Domain classifier
# -----------------------------------------------------------------------------
layer {
  name: "dc_ip1"
  type: "InnerProduct"
  bottom: "grl"
  top: "dc_ip1"
  param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      #type: "gaussian"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "dc_relu1"
  type: "ReLU"
  bottom: "dc_ip1"
  top: "dc_ip1"
}
layer {
  name: "dc_drop1"
  type: "Dropout"
  bottom: "dc_ip1"
  top: "dc_ip1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "dc_ip2"
  type: "InnerProduct"
  bottom: "dc_ip1"
  top: "dc_ip2"
  param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "dc_relu2"
  type: "ReLU"
  bottom: "dc_ip2"
  top: "dc_ip2"
}
layer {
  name: "dc_drop2"
  type: "Dropout"
  bottom: "dc_ip2"
  top: "dc_ip2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "dc_ip3"
  type: "InnerProduct"
  bottom: "dc_ip2"
  top: "dc_ip3"
  param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "dc_loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "dc_ip3"
  bottom: "domain_labels"
  top: "dc_loss"
  loss_weight: 0.1
}

